service: api-proy
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9    
  # Default memory size for functions (default: 256MB)
  memorySize: 256
  iam:
    role: arn:aws:iam::223794358031:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-meds-table
    BUCKET_IMG: ${sls:stage}-meds-imagen
    FARMACIA_TABLE: ${sls:stage}-farmacia-table

  region: us-east-1

plugins:
  - serverless-python-requirements
  - "@agiledigital/serverless-sns-sqs-lambda"

custom:
  pythonRequirements:

    # aws lambda has an after-extraction size limit - with native dependencies we pass the limit quickly
    # zip the requirements and extract them on the fly (see handler.py)
    zip: true

package:
  # exclude everything...
  exclude:
    - '**/*'

  # include - we have to explicitly list packages with native dependencies.
  include:
    - '*.py'
    - 'amazon-textract-response-parser'

functions:
  scan_meds:
    handler: scan_meds.lambda_handler
    events:
      - s3:
          bucket: ${sls:stage}-meds-imagen
          event: s3:ObjectCreated:*
  new_meds:
    handler: new_meds.lambda_handler
    events:
      - sns: arn:aws:sns:us-east-1:223794358031:NuevoMedicamento
  new_farmacia:
    handler: new_farmacia.lambda_handler
    events:
      - http:
          path: /farmacia/crear
          method: post
          cors: true
          integration: lambda
  createfarmaciaT:
    handler: create_farmacia.lambda_handler
    events:
      #- sns: arn:aws:sns:us-east-1:201115287456:PROY_NuevaIMG
      #- sns: ${self:provider.environment.SNS_LETTER}
      ########
      - snsSqs:
          name: SQSFarmaciaEventQueue
          topicArn: arn:aws:sns:us-east-1:223794358031:NuevaFarmacia
          #Ref: SNSTopic${self:provider.environment.SNS_LETTER}
          batchSize: 2 # Optional - default value is 10
          maximumBatchingWindowInSeconds: 10 # optional - default is 0 (no batch window)
          maxRetryCount: 2 # Optional - default value is 5
          kmsDataKeyReusePeriodSeconds: 600 # optional - AWS default is 300 seconds
          deadLetterMessageRetentionPeriodSeconds: 1209600 # optional - AWS default is 345600 secs (4 days)
          visibilityTimeout: 120 # optional (in seconds) - AWS default is 30 secs
          rawMessageDelivery: true # Optional - default value is true
      #######
    # layers:
    #   - Ref: PythonRequirementsLambdaLayer

resources:
  Resources:
    TablaMedicinas:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: fabricant_id
            AttributeType: S
          - AttributeName: info
            AttributeType: S
        KeySchema:
          - AttributeName: fabricant_id
            KeyType: HASH
          - AttributeName: info
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    TablaFarmacias:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.FARMACIA_TABLE}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: farmacia_name
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: farmacia_name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

